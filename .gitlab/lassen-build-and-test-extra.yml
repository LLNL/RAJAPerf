##############################################################################
# Copyright (c) 2016-22, Lawrence Livermore National Security, LLC
# and RAJA project contributors. See the RAJA/LICENSE file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
##############################################################################

########################
# Overridden shared jobs
########################
# We duplicate the shared jobs description and add necessary changes for RAJA.
# We keep ${PROJECT_<MACHINE>_VARIANTS} and ${PROJECT_<MACHINE>_DEPS} So that
# the comparison with the original job is easier.

# Overriding shared spec: Allow failures
ibm_clang_9_0_0:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %clang@ibm.9.0.0 ${PROJECT_LASSEN_DEPS}"
  extends: .build_and_test_on_lassen
  allow_failure: true

# Overriding shared spec: Allow failures
ibm_clang_9_0_0_gcc_8_3_1:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %clang@ibm.9.0.0 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ${PROJECT_LASSEN_DEPS}"
  extends: .build_and_test_on_lassen
  allow_failure: true

# Overriding shared spec: Extra flags
gcc_8_3_1:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %gcc@8.3.1 cxxflags=\"-finline-functions -finline-limit=20000\" cflags=\"-finline-functions -finline-limit=20000\" ${PROJECT_LASSEN_DEPS}"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Longer allocation + Allow failures
pgi_20_4_gcc_8_3_1:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %pgi@20.4 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 120"
  extends: .build_and_test_on_lassen
  allow_failure: true

# Overriding shared spec: Longer allocation + Extra flags
xl_16_1_1_12:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %xl@16.1.1.12 cxxflags=\"-qthreaded -std=c++14 -O2 -qstrict -qxlcompatmacros -qalias=noansi -qsmp=omp -qhot -qnoeh -qsuppress=1500-029 -qsuppress=1500-036 ${PROJECT_LASSEN_DEPS}\""
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 50"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Longer allocation + Extra flags
xl_16_1_1_12_gcc_8_3_1:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} %xl@16.1.1.12 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 -qthreaded -std=c++14 -O2 -qstrict -qxlcompatmacros -qalias=noansi -qsmp=omp -qhot -qnoeh -qsuppress=1500-029 -qsuppress=1500-036\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 50"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Longer allocation + Allow failures
ibm_clang_9_0_0_gcc_8_3_1_cuda_10_1_168:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} +cuda %clang@ibm.9.0.0 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ^cuda@10.1.168 ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 120"
  extends: .build_and_test_on_lassen
  allow_failure: true

# WARNING: RAJA is using cuda@11.0.2 here.
# Overriding shared spec: Extra flags + Longer allocation
xl_16_1_1_12_cuda_10_1_168:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} +cuda %xl@16.1.1.12 cxxflags=\"-qthreaded -std=c++14 -O2 -qstrict -qxlcompatmacros -qalias=noansi -qsmp=omp -qhot -qnoeh -qsuppress=1500-029 -qsuppress=1500-036\" cuda_arch=70 ^cuda@10.1.168 ^cmake@3.14.5 ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 60"
  allow_failure: true
  extends: .build_and_test_on_lassen

# Overriding shared spec: Extra flags + Longer allocation
xl_16_1_1_12_gcc_8_3_1_cuda_11_0_2:
  variables:
    SPEC: " ${PROJECT_LASSEN_VARIANTS} +cuda %xl@16.1.1.12 cuda_arch=70 cxxflags\"=--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 -qthreaded -std=c++14 -O2 -qstrict -qxlcompatmacros -qalias=noansi -qsmp=omp -qhot -qnoeh -qsuppress=1500-029 -qsuppress=1500-036\" cflags=--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 ^cuda@11.0.2 ^cmake@3.14.5 ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 60"
  allow_failure: true
  extends: .build_and_test_on_lassen


############
# Extra jobs
############
# We do not recommend using ${PROJECT_<MACHINE>_VARIANTS} and
# ${PROJECT_<MACHINE>_DEPS} in the extra jobs. There is no reason not to fully
# describe the spec here.

##########
# CPU ONLY
##########

clang_11_0_0:
  variables:
    SPEC: " +openmp %clang@11.0.0"
  extends: .build_and_test_on_lassen

##########
# CUDA
##########

clang_11_0_0_gcc_8_3_1_cuda_11_5_0:
  variables:
    SPEC: " +openmp +cuda cuda_arch=70 %clang@11.0.0 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ^cuda@11.5.0"
  extends: .build_and_test_on_lassen

# WARNING: RAJA is using cuda@11.0.2 here.
gcc_8_3_1_cuda_10_1_168:
  variables:
    SPEC: " +openmp +cuda %gcc@8.3.1 cuda_arch=70 ^cuda@10.1.168"
  extends: .build_and_test_on_lassen

# WARNING: RAJA is using cuda@11.5.0 here.
gcc_8_3_1_cuda_11_0_2_ats_disabled:
  variables:
    SPEC: " +openmp +cuda %gcc@8.3.1 cuda_arch=70 ^cuda@11.0.2"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 --atsdisable -W 30"
  extends: .build_and_test_on_lassen

##########
# EXTRAS
##########

clang_9_0_0_libcpp:
  variables:
    SPEC: " +openmp %clang@9.0.0+libcpp"
  extends: .build_and_test_on_lassen

clang_9_0_0_asan:
  variables:
    SPEC: " +openmp %clang@9.0.0 cxxflags=-fsanitize=address"
    ASAN_OPTIONS: "detect_leaks=1"
  extends: .build_and_test_on_lassen

# WARNING: RAJA is using cuda@11.0.2 here.
#gcc_8_3_1_cuda_10_1_168_desul_atomics:
#  variables:
#    SPEC: "+openmp +cuda +desul %gcc@8.3.1 cuda_arch=70 ^cuda@10.1.168"
#  extends: .build_and_test_on_lassen
