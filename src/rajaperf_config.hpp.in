/*!
 ******************************************************************************
 *
 * \file
 *
 * \brief   Header file that captures build configuration for perf suite.
 *
 ******************************************************************************
 */

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
// Copyright (c) 2017-23, Lawrence Livermore National Security, LLC
// and RAJA Performance Suite project contributors.
// See the RAJAPerf/LICENSE file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//


#ifndef RAJAPerf_config_HPP
#define RAJAPerf_config_HPP

#include "RAJA/config.hpp"
#include "camp/number.hpp"

#include <string>

#cmakedefine RAJA_PERFSUITE_ENABLE_MPI
#cmakedefine RAJA_PERFSUITE_ENABLE_OPENMP5_SCAN

#if defined(RAJA_ENABLE_HIP)
#include <hip/hip_version.h>
#if (HIP_VERSION_MAJOR > 5) || \
    (HIP_VERSION_MAJOR == 5 && HIP_VERSION_MINOR >= 2)
// enable memadvise coarse with rocm version >= 4.3
#define RAJAPERF_USE_MEMADVISE_COARSE
#endif
#endif

namespace rajaperf {

struct configuration {
#if defined(RAJA_PERFSUITE_USE_CALIPER)
constexpr static const char* adiak_perfsuite_version = "@CMAKE_PROJECT_VERSION@";
constexpr static const char* adiak_raja_version = "@RAJA_LOADED@";
constexpr static const char* adiak_cmake_build_type = "@CMAKE_BUILD_TYPE@";
constexpr static const char* adiak_cmake_cxx_flags = "@CMAKE_CXX_FLAGS@";
constexpr static const char* adiak_cmake_exe_linker_flags = "@CMAKE_EXE_LINKER_FLAGS@";
constexpr static const char* adiak_rajaperf_compiler = "@RAJAPERF_COMPILER@"; 
constexpr static const char* adiak_rajaperf_compiler_options = "@RAJAPERF_COMPILER_OPTIONS@"; 
constexpr static const char* adiak_compiler_version = "@CMAKE_CXX_COMPILER_VERSION@"; 
constexpr static const char* adiak_cuda_compiler_version = "@CMAKE_CUDA_COMPILER_VERSION@"; 
constexpr static const char* adiak_gpu_targets = "@GPU_TARGETS@"; 
constexpr static const char* adiak_cmake_hip_architectures = "@CMAKE_HIP_ARCHIECTURES@"; 
constexpr static const char* adiak_gpu_targets_block_sizes = "@RAJA_PERFSUITE_GPU_BLOCKSIZES@"; 
constexpr static const char* adiak_raja_hipcc_flags = "@RAJA_HIPCC_FLAGS@"; 
constexpr static const char* adiak_mpi_cxx_compiler = "@MPI_CXX_COMPILER@"; 
constexpr static const char* adiak_systype_build = "@RAJAPERF_BUILD_SYSTYPE@"; 
constexpr static const char* adiak_machine_build = "@RAJAPERF_BUILD_HOST@"; 
#endif

// helper alias to void trailing comma in no-arg case
template < size_t... Is >
using i_seq = camp::int_seq<size_t, Is...>;
// List of GPU block sizes
using gpu_block_sizes = i_seq<@RAJA_PERFSUITE_GPU_BLOCKSIZES@>;

// Name of user who ran code
std::string user_run;

// Date, time code was run
std::string date_run;

// Systype and machine code ran on (ex: chaos_5_x64_64)
std::string systype_run;
std::string machine_run;

};
} // closing brace for rajaperf namespace

// Squash compiler warnings about unused variables
template < typename ... Ts >
inline void RAJAPERF_UNUSED_VAR(Ts&&...) { }

// Squash compiler warnings about unused arguments
#define RAJAPERF_UNUSED_ARG(...)

#endif  // closing endif for header file include guard

